/******************************************************************************

                              Online C++ Compiler.
               Code, Compile, Run and Debug C++ program online.
Write your code in this editor and press "Run" button to compile and execute it.

*******************************************************************************/

#include <iostream>
#include <vector>
#include <algorithm>
#include <list>
#include <unordered_map>
#include <string>


int main()
{
    
    
    //Remove all zeros or any specific element ;
    
    std::vector<int>objVec{5,0,5,2,0,5,4};
    
    
    objVec.erase(std::remove(objVec.begin(),objVec.end(),0),objVec.end());
    
    for(auto i : objVec)
    {
        std::cout<<i<<"\t";
    }
    
    std::cout<<std::endl;
    
    
    //Partition
    
    //Move all 0s to first place.
    
    std::vector<int> objZero{1,2,0,4,5,0,0,7,8};
    
    
    auto ite = std::stable_partition(objZero.begin(),objZero.end(),[](int x)
    {
        return x == 0;
    }
    );
    
    
    for(auto it: objZero)
    {
        std::cout<<it<<"\t";
    }
    
    std::cout<<std::endl;
    
    std::cout<<"FirtsNonZero at index   "<<std::distance(objZero.begin(),ite)<<std::endl;
    

    
    
    //separate positive and negative intergers
    
    std::vector<int>objPosNeg{-1,2,3,4,-5,-6,0,1,5};
    
    auto i = std::stable_partition(objPosNeg.begin(),objPosNeg.end(),[](int x)
    {
        return x >=0 ; //Prediacte whihc place +ve first then -ve...
    }
    );
    
    
    for(auto it: objPosNeg)
    {
        std::cout<<it<<"\t";
    }
    
    std::cout<<std::endl;
    
    //Partiotn even and odd 6
    
    std::vector<int>objOddEven {1,5,2,4,0,7,6,3};
    
    std::stable_partition(objOddEven.begin(),objOddEven.end(),[](int x)
    {
        return x%2 == 0;
    });
    
    for(auto it: objOddEven)
    {
        std::cout<<it<<"\t";
    }
    std::cout<<std::endl;
    
    //Move all uppercase letter to start;
    
    
    std::string s = "Bhavesh WAGHELA";
    
    std::stable_partition(s.begin(),s.end(),[](char x)
    {
        return std::isupper(x);//Move upper latter to first 
    });
    
    for(auto it: s)
    {
        std::cout<<it<<"\t";
    }
    
    
    std::cout<<std::endl;
    
    //Count how many elements satisfy a condition using partition
    
    
    std::vector<int>objcount{1,9,3,7,5,8,4,6,2,10};
    
    auto it = std::partition(objcount.begin(),objcount.end(),[](int x)
    {
        return x < 10 ; //it will aprtiton all elements greater than 10 to left side.
    });
    
    int iCount = std::distance(objcount.begin(),it); //This will give distance between actul predicate apssed and falied
    
    std::cout<<"Total cout less than 10 ="<<iCount<<std::endl;
    return 0;
}